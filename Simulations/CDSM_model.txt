model{ 
  
  ##Priors
  
  for(j in 1:nsites){
    
    #Abundance prior
    alpha[j] ~ dnorm(0, 0.01)
    
    #Detection prior
    sigma[j] ~ dunif(0, 500)
    
  }#End j loop
  
  #Group size prior
  beta ~ dunif(0, 50)
  
  ##Likelihood
  
  #Multinomial detection component
  for(i in 1:nobs){
    
    dclass[i] ~ dcat(fc[1:nG, site[i]])
    
  }#End i loop
  
  for(j in 1:nsites){
    
    #Construct cell probabilities for nG cells
    for(k in 1:nG){  
      
      #Half normal detection function at midpt (length of rectangle)
      p[k,j] <- exp(- midpt[k] * midpt[k] / (2 * sigma[j] * sigma[j])) 
      
      #Probability of x in each interval (width of rectangle)
      pi[k,j] <- v/B 
      
      #Detection probability for each interval (area of each rectangle)
      f[k,j] <- p[k,j] * pi[k,j] 
      
      #Conditional detection probability (scale to 1)
      fc[k,j] <- f[k,j] / pcap[j] 
      
    }#End k loop
    
    #Detection probability at each site (sum of rectangles)
    pcap[j] <- sum(f[1:nG,j])               
    
    #Observation process
    y[j] ~ dbin(pcap[j], N[j])
    
    #Description of latent number of groups
    N[j] ~ dpois(lambda[j])
    
    #Linear model for number of groups
    lambda[j] <- exp(alpha[j] + log(offset[j]))
    
    #Group size
    gs.lam[j] <- exp(beta)
    
  }#End j loop
  
  for(i in 1:nobs){
    
    gs[i] ~ dpois(gs.lam[site[i]]) T(1,)
    
  }#End i loop
  
  ##Derived quantities
  
  #Number of groups within
  Nin <- sum(N[1:nsites])
  
  for(j in 1:nsites){
    
    #Abundance within
    Ntotal[j] <- N[j] * gs.lam[j]
    
  } #End j loop
  
  Nintotal <- sum(Ntotal[])
  
  #Density
  D <- (939.316/164.4837)
  
  #Number of total groups in sampling boundary
  Nreal <- Nin * D
  
  #Abundance in sampling boundary
  Nrealtotal <- Nintotal * D
  
}